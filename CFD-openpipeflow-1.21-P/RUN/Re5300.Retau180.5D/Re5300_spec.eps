%!PS-Adobe-2.0 EPSF-2.0
%%Title: out.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Jul 21 09:14:57 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 140 scalefont setfont
1.000 UL
LTb
826 280 M
63 0 V
6073 0 R
-63 0 V
stroke
742 280 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 1e-06)]
] -46.7 MRshow
1.000 UL
LTb
826 510 M
31 0 V
6105 0 R
-31 0 V
826 815 M
31 0 V
6105 0 R
-31 0 V
826 971 M
31 0 V
6105 0 R
-31 0 V
826 1045 M
63 0 V
6073 0 R
-63 0 V
stroke
742 1045 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
1.000 UL
LTb
826 1276 M
31 0 V
6105 0 R
-31 0 V
826 1580 M
31 0 V
6105 0 R
-31 0 V
826 1736 M
31 0 V
6105 0 R
-31 0 V
826 1811 M
63 0 V
6073 0 R
-63 0 V
stroke
742 1811 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 0.0001)]
] -46.7 MRshow
1.000 UL
LTb
826 2041 M
31 0 V
6105 0 R
-31 0 V
826 2346 M
31 0 V
6105 0 R
-31 0 V
826 2502 M
31 0 V
6105 0 R
-31 0 V
826 2576 M
63 0 V
6073 0 R
-63 0 V
stroke
742 2576 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
826 2806 M
31 0 V
6105 0 R
-31 0 V
826 3111 M
31 0 V
6105 0 R
-31 0 V
826 3267 M
31 0 V
6105 0 R
-31 0 V
826 3341 M
63 0 V
6073 0 R
-63 0 V
stroke
742 3341 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
826 3572 M
31 0 V
6105 0 R
-31 0 V
826 3876 M
31 0 V
6105 0 R
-31 0 V
826 4032 M
31 0 V
6105 0 R
-31 0 V
826 4107 M
63 0 V
6073 0 R
-63 0 V
stroke
742 4107 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
826 4337 M
31 0 V
6105 0 R
-31 0 V
826 4642 M
31 0 V
6105 0 R
-31 0 V
826 4798 M
31 0 V
6105 0 R
-31 0 V
826 4872 M
63 0 V
6073 0 R
-63 0 V
stroke
742 4872 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
826 280 M
0 63 V
0 4529 R
0 -63 V
stroke
826 140 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1750 280 M
0 31 V
0 4561 R
0 -31 V
2290 280 M
0 31 V
0 4561 R
0 -31 V
2673 280 M
0 31 V
0 4561 R
0 -31 V
2970 280 M
0 31 V
0 4561 R
0 -31 V
3213 280 M
0 31 V
0 4561 R
0 -31 V
3419 280 M
0 31 V
0 4561 R
0 -31 V
3597 280 M
0 31 V
0 4561 R
0 -31 V
3754 280 M
0 31 V
0 4561 R
0 -31 V
3894 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3894 140 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
4818 280 M
0 31 V
0 4561 R
0 -31 V
5358 280 M
0 31 V
0 4561 R
0 -31 V
5741 280 M
0 31 V
0 4561 R
0 -31 V
6038 280 M
0 31 V
0 4561 R
0 -31 V
6281 280 M
0 31 V
0 4561 R
0 -31 V
6487 280 M
0 31 V
0 4561 R
0 -31 V
6665 280 M
0 31 V
0 4561 R
0 -31 V
6822 280 M
0 31 V
0 4561 R
0 -31 V
6962 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6962 140 M
[ [(Times-Roman) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
826 280 M
6136 0 V
0 4592 V
-6136 0 V
826 280 L
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4739 M
('vel_spec0005.dat' u \($1+1\):2) Rshow
LT0
6395 4739 M
399 0 V
1750 4049 M
540 381 V
383 -533 V
297 130 V
243 -226 V
206 -278 V
178 -371 V
157 -477 V
140 352 V
127 -58 V
116 -116 V
107 -161 V
98 -315 V
92 -88 V
86 -145 V
81 -100 V
76 -23 V
72 -63 V
69 -91 V
65 -62 V
62 -52 V
59 131 V
56 -69 V
55 18 V
52 -58 V
50 -125 V
49 -102 V
47 -19 V
45 103 V
43 -27 V
43 -184 V
41 34 V
40 -75 V
38 13 V
38 -28 V
36 -31 V
36 -35 V
34 -2 V
34 -59 V
33 -32 V
32 -132 V
31 104 V
31 -62 V
30 -62 V
29 -93 V
29 84 V
28 -108 V
28 65 V
26 -195 V
27 206 V
26 -298 V
25 260 V
25 -307 V
24 326 V
24 -225 V
24 214 V
23 -277 V
23 269 V
22 -349 V
22 353 V
22 -191 V
21 185 V
21 -176 V
21 177 V
826 4430 M
1750 3050 L
540 6 V
383 -104 V
297 32 V
243 -131 V
206 2 V
178 -136 V
157 -44 V
140 67 V
127 -58 V
116 -140 V
107 23 V
98 -50 V
92 -71 V
86 37 V
81 105 V
76 -210 V
72 -31 V
69 5 V
65 11 V
62 -20 V
59 -20 V
56 164 V
55 -169 V
52 -21 V
50 -119 V
49 66 V
47 -133 V
45 61 V
43 -73 V
43 -15 V
41 -39 V
40 14 V
38 -86 V
38 161 V
36 -139 V
36 23 V
34 -57 V
stroke
5707 1961 M
34 -34 V
33 175 V
32 -292 V
31 122 V
31 -101 V
30 -33 V
29 31 V
29 60 V
28 -129 V
28 -39 V
26 113 V
27 -137 V
26 -85 V
25 -48 V
25 19 V
24 102 V
24 -82 V
24 -71 V
23 -28 V
23 46 V
22 -65 V
22 -99 V
22 83 V
21 -64 V
21 13 V
21 -38 V
20 53 V
20 -67 V
20 12 V
20 -70 V
19 65 V
19 -61 V
18 -1 V
19 -20 V
18 -61 V
18 35 V
17 -21 V
18 -41 V
17 51 V
17 -13 V
17 -62 V
16 29 V
17 -94 V
16 -5 V
16 14 V
15 -43 V
16 71 V
15 -68 V
16 -17 V
15 28 V
15 -3 V
14 -40 V
15 40 V
14 -43 V
15 -39 V
14 26 V
14 52 V
826 4430 M
1750 3038 L
540 12 V
383 -32 V
297 -6 V
243 19 V
206 -64 V
178 44 V
157 -4 V
140 -129 V
127 193 V
116 -169 V
107 -133 V
98 -64 V
92 -43 V
86 48 V
81 -78 V
76 -43 V
72 -16 V
69 80 V
65 -256 V
62 40 V
59 -121 V
56 59 V
55 -138 V
52 164 V
50 -136 V
49 44 V
47 -43 V
45 -133 V
43 13 V
43 -40 V
41 -6 V
40 23 V
38 -129 V
38 47 V
36 -34 V
36 -16 V
34 -87 V
34 -79 V
33 78 V
32 -83 V
31 -32 V
31 -48 V
30 15 V
29 -31 V
29 -18 V
stroke
5956 1706 M
28 46 V
28 -157 V
26 31 V
27 30 V
26 12 V
25 -102 V
25 -65 V
24 48 V
24 201 V
24 -313 V
23 5 V
23 -3 V
22 -40 V
22 -68 V
22 18 V
21 28 V
21 -84 V
21 84 V
20 -27 V
20 -63 V
20 -134 V
20 -21 V
19 102 V
19 -4 V
18 -29 V
19 -51 V
18 55 V
18 9 V
17 -125 V
18 -49 V
17 5 V
17 -104 V
17 32 V
16 38 V
17 -30 V
16 55 V
16 -84 V
15 11 V
16 -57 V
15 -3 V
16 30 V
15 7 V
15 -67 V
14 95 V
15 -147 V
14 33 V
15 38 V
14 26 V
14 -88 V
1750 4049 Pls
2290 4430 Pls
2673 3897 Pls
2970 4027 Pls
3213 3801 Pls
3419 3523 Pls
3597 3152 Pls
3754 2675 Pls
3894 3027 Pls
4021 2969 Pls
4137 2853 Pls
4244 2692 Pls
4342 2377 Pls
4434 2289 Pls
4520 2144 Pls
4601 2044 Pls
4677 2021 Pls
4749 1958 Pls
4818 1867 Pls
4883 1805 Pls
4945 1753 Pls
5004 1884 Pls
5060 1815 Pls
5115 1833 Pls
5167 1775 Pls
5217 1650 Pls
5266 1548 Pls
5313 1529 Pls
5358 1632 Pls
5401 1605 Pls
5444 1421 Pls
5485 1455 Pls
5525 1380 Pls
5563 1393 Pls
5601 1365 Pls
5637 1334 Pls
5673 1299 Pls
5707 1297 Pls
5741 1238 Pls
5774 1206 Pls
5806 1074 Pls
5837 1178 Pls
5868 1116 Pls
5898 1054 Pls
5927 961 Pls
5956 1045 Pls
5984 937 Pls
6012 1002 Pls
6038 807 Pls
6065 1013 Pls
6091 715 Pls
6116 975 Pls
6141 668 Pls
6165 994 Pls
6189 769 Pls
6213 983 Pls
6236 706 Pls
6259 975 Pls
6281 626 Pls
6303 979 Pls
6325 788 Pls
6346 973 Pls
6367 797 Pls
6388 974 Pls
826 4430 Pls
1750 3050 Pls
2290 3056 Pls
2673 2952 Pls
2970 2984 Pls
3213 2853 Pls
3419 2855 Pls
3597 2719 Pls
3754 2675 Pls
3894 2742 Pls
4021 2684 Pls
4137 2544 Pls
4244 2567 Pls
4342 2517 Pls
4434 2446 Pls
4520 2483 Pls
4601 2588 Pls
4677 2378 Pls
4749 2347 Pls
4818 2352 Pls
4883 2363 Pls
4945 2343 Pls
5004 2323 Pls
5060 2487 Pls
5115 2318 Pls
5167 2297 Pls
5217 2178 Pls
5266 2244 Pls
5313 2111 Pls
5358 2172 Pls
5401 2099 Pls
5444 2084 Pls
5485 2045 Pls
5525 2059 Pls
5563 1973 Pls
5601 2134 Pls
5637 1995 Pls
5673 2018 Pls
5707 1961 Pls
5741 1927 Pls
5774 2102 Pls
5806 1810 Pls
5837 1932 Pls
5868 1831 Pls
5898 1798 Pls
5927 1829 Pls
5956 1889 Pls
5984 1760 Pls
6012 1721 Pls
6038 1834 Pls
6065 1697 Pls
6091 1612 Pls
6116 1564 Pls
6141 1583 Pls
6165 1685 Pls
6189 1603 Pls
6213 1532 Pls
6236 1504 Pls
6259 1550 Pls
6281 1485 Pls
6303 1386 Pls
6325 1469 Pls
6346 1405 Pls
6367 1418 Pls
6388 1380 Pls
6408 1433 Pls
6428 1366 Pls
6448 1378 Pls
6468 1308 Pls
6487 1373 Pls
6506 1312 Pls
6524 1311 Pls
6543 1291 Pls
6561 1230 Pls
6579 1265 Pls
6596 1244 Pls
6614 1203 Pls
6631 1254 Pls
6648 1241 Pls
6665 1179 Pls
6681 1208 Pls
6698 1114 Pls
6714 1109 Pls
6730 1123 Pls
6745 1080 Pls
6761 1151 Pls
6776 1083 Pls
6792 1066 Pls
6807 1094 Pls
6822 1091 Pls
6836 1051 Pls
6851 1091 Pls
6865 1048 Pls
6880 1009 Pls
6894 1035 Pls
6908 1087 Pls
826 4430 Pls
1750 3038 Pls
2290 3050 Pls
2673 3018 Pls
2970 3012 Pls
3213 3031 Pls
3419 2967 Pls
3597 3011 Pls
3754 3007 Pls
3894 2878 Pls
4021 3071 Pls
4137 2902 Pls
4244 2769 Pls
4342 2705 Pls
4434 2662 Pls
4520 2710 Pls
4601 2632 Pls
4677 2589 Pls
4749 2573 Pls
4818 2653 Pls
4883 2397 Pls
4945 2437 Pls
5004 2316 Pls
5060 2375 Pls
5115 2237 Pls
5167 2401 Pls
5217 2265 Pls
5266 2309 Pls
5313 2266 Pls
5358 2133 Pls
5401 2146 Pls
5444 2106 Pls
5485 2100 Pls
5525 2123 Pls
5563 1994 Pls
5601 2041 Pls
5637 2007 Pls
5673 1991 Pls
5707 1904 Pls
5741 1825 Pls
5774 1903 Pls
5806 1820 Pls
5837 1788 Pls
5868 1740 Pls
5898 1755 Pls
5927 1724 Pls
5956 1706 Pls
5984 1752 Pls
6012 1595 Pls
6038 1626 Pls
6065 1656 Pls
6091 1668 Pls
6116 1566 Pls
6141 1501 Pls
6165 1549 Pls
6189 1750 Pls
6213 1437 Pls
6236 1442 Pls
6259 1439 Pls
6281 1399 Pls
6303 1331 Pls
6325 1349 Pls
6346 1377 Pls
6367 1293 Pls
6388 1377 Pls
6408 1350 Pls
6428 1287 Pls
6448 1153 Pls
6468 1132 Pls
6487 1234 Pls
6506 1230 Pls
6524 1201 Pls
6543 1150 Pls
6561 1205 Pls
6579 1214 Pls
6596 1089 Pls
6614 1040 Pls
6631 1045 Pls
6648 941 Pls
6665 973 Pls
6681 1011 Pls
6698 981 Pls
6714 1036 Pls
6730 952 Pls
6745 963 Pls
6761 906 Pls
6776 903 Pls
6792 933 Pls
6807 940 Pls
6822 873 Pls
6836 968 Pls
6851 821 Pls
6865 854 Pls
6880 892 Pls
6894 918 Pls
6908 830 Pls
6594 4739 Pls
1.000 UL
LTb
826 280 M
6136 0 V
0 4592 V
-6136 0 V
826 280 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
